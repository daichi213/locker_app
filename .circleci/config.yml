version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  ruby_build:
    docker:
    - image: circleci/ruby:2.5
      environment:
        - BUNDLER_VERSION: 2.1.4
        - RAILS_ENV: 'test'
    steps:
      - checkout

  mysql_build:
    docker:
    - image: circleci/mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        - MYSQL_ROOT_HOST: '172.18.0.3'
    steps:
      - checkout

      # Database setup
      - run: mv ./config/database.yml.ci ./config/database.yml

      # Database setup
      - run:
          name: Databasesetup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

  build:
    docker:
      - image: daichi213/locker_app_web

    working_directory: ~/locker_app

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    #     # run tests!
    #     - run:
    #         name: Run rspec
    #         command: |
    #           mkdir /tmp/test-results
    #           TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
    #             circleci tests split --split-by=timings)"

    #           bundle exec rspec \
    #             --format progress \
    #             --format RspecJunitFormatter \
    #             --out /tmp/test-results/rspec.xml \
    #             --format progress \
    #             $TEST_FILES

    #     # collect reports
    #     - store_test_results:
    #         path: /tmp/test-results
    #     - store_artifacts:
    #         path: /tmp/test-results
    #         destination: test-results
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # CircleCIに登録した秘密キーを呼び出す
      - add_ssh_keys:
          fingerprints:
            - "df:d5:fe:d5:72:22:38:18:7b:0a:42:bd:c1:73:2d:d0"
      # CircleCIに登録した環境変数を使ってSSH接続する
      - run: ssh ${USER_NAME}@${HOST_NAME} 'sudo su - ozaki && cd /opt/locker_app && git pull'

workflows:
  version: 2
  build_and_deploy:
      # build ジョブと deploy ジョブを呼び出す
      jobs:
          - build
          - deploy:
              requires:
                  # deploy ジョブより先に build ジョブを実行しろ！
                  - build
              # master ブランチに push された場合のみ deploy ジョブを実行する
              filters:
                  branches:
                      only: master
